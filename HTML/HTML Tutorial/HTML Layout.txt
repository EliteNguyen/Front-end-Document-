1.Bố cục HTML (HTML Layouts)

Ví dụ: (Example)

2.Các thành phần bố cục HTML (HTML Layout Elements)

Trang web thường hiển thị nội dung trong nhiều cột (như tạp chí hoặc báo). (Websites often display content in multiple columns (like a magazine or newspaper).)
HTML cung cấp một số yếu tố ngữ nghĩa xác định các phần khác nhau của trang web: (HTML offers several semantic elements that define the different parts of a web page:)

<tiêu đề> - Xác định tiêu đề cho tài liệu hoặc phần (<header> - Defines a header for a document or a section)
<nav> - Xác định vùng chứa cho các liên kết điều hướng (<nav> - Defines a container for navigation links)
<phần> - Xác định một phần trong tài liệu (<section> - Defines a section in a document)
<article> - Xác định một bài viết độc lập (<article> - Defines an independent self-contained article)
<sid> - Xác định nội dung ngoài nội dung (như thanh bên) (<aside> - Defines content aside from the content (like a sidebar))
<footer> - Xác định chân trang cho tài liệu hoặc phần (<footer> - Defines a footer for a document or a section)
<chi tiết> - Xác định chi tiết bổ sung (<details> - Defines additional details)
<Tóm tắt> - Xác định tiêu đề cho phần tử <chi tiết> (<summary> - Defines a heading for the <details> element)

Tag <nav> định nghĩa link danh mục (navigation).
Tag <nav> thường sử dụng cho global menu, local link, topic path, pager link,...

Thuộc tính float xác định có hay không một thành phần được float (trôi nổi).

Thuộc tính padding thêm vào khoảng không cho thành phần.

Thuộc tính list-style-type : Xác định loại cho danh sách.

Tag <article> định nghĩa một bài viết, một nội dung riêng biệt.
Thường được sử dụng trong:
Tin tức.
Comment.
Nội dung quảng cáo.

Tag <section> định nghĩa một khu vực (vùng bao) trong văn bản HTML.

Thuộc tính display xác định loại hiển thị của thành phần.

Tag <aside> định nghĩa nội dung bên ngoài nội dung chính (thường là phần sidebar).
Tag <aside> nên có nội dung liên quan tới phần nội dung chính.
Tag <aside> có thể chứa tất cả các tag định dạng khác.

2.Kỹ thuật bố trí HTML (HTML Layout Techniques)

Có năm cách khác nhau để tạo bố cục nhiều màu. Mỗi cách đều có ưu và nhược điểm: (There are five different ways to create multicolumn layouts. Each way has its pros and cons:)

Bảng HTML (không được đề xuất) (HTML tables (not recommended))
Thuộc tính float CSS (CSS float property)
CSS flexbox (CSS flexbox)
Khung CSS (CSS framework)
Lưới CSS (CSS grid)

3.Chọn cái nào? (Which One to Choose?)
3.1.Bảng HTML (HTML Tables)

<Table> yếu tố không được thiết kế để trở thành một công cụ bố trí! Mục đích của thẻ <table> phần tử là để hiển thị dữ liệu dạng bảng. Vì vậy, không sử dụng bảng để bố trí trang của bạn! Họ sẽ mang một mớ hỗn độn vào mã của bạn. Và hãy tưởng tượng sẽ khó khăn như thế nào để thiết kế lại trang web của bạn sau một vài tháng. (The <table> element was not designed to be a layout tool! The purpose of the <table> element is to display tabular data. So, do not use tables for your page layout! They will bring a mess into your code. And imagine how hard it will be to redesign your site after a couple of months.)
Mẹo: KHÔNG sử dụng bảng để bố trí trang của bạn! (Tip: Do NOT use tables for your page layout!)

3.2.Khung CSS (CSS Frameworks)

Nếu bạn muốn tạo bố cục nhanh, bạn có thể sử dụng khung, như W3.CSS hoặc Bootstrap. (If you want to create your layout fast, you can use a framework, like W3.CSS or Bootstrap.)

3.3.Phao CSS (CSS Floats)

Thông thường để thực hiện toàn bộ bố cục web bằng thuộc tính float CSS. Float rất dễ học - bạn chỉ cần nhớ làm thế nào float và thuộc tính rõ ràng hoạt động. Nhược điểm: Các phần tử nổi được gắn với luồng tài liệu, có thể gây hại cho tính linh hoạt. Tìm hiểu thêm về float trong chương CSS CSS và Clear của chúng tôi. (It is common to do entire web layouts using the CSS float property. Float is easy to learn - you just need to remember how the float and clear properties work. Disadvantages: Floating elements are tied to the document flow, which may harm the flexibility. Learn more about float in our CSS Float and Clear chapter.)

3.4.CSS Flexbox

Flexbox là một chế độ bố trí mới trong CSS3. (Flexbox is a new layout mode in CSS3.)
Việc sử dụng flexbox đảm bảo các yếu tố hoạt động có thể dự đoán được khi bố cục trang phải phù hợp với các kích thước màn hình khác nhau và các thiết bị hiển thị khác nhau. Nhược điểm: Không hoạt động trong IE10 trở về trước. (Use of flexbox ensures that elements behave predictably when the page layout must accommodate different screen sizes and different display devices. Disadvantages: Does not work in IE10 and earlier.)
Tìm hiểu thêm về flexbox trong chương CSS Flexbox của chúng tôi. (Learn more about flexbox in our CSS Flexbox chapter.)


3.5.Chế độ xem lưới CSS (CSS Grid View)

Mô-đun bố trí lưới CSS cung cấp một hệ thống bố cục dựa trên lưới, với các hàng và cột, giúp thiết kế trang web dễ dàng hơn mà không phải sử dụng phao và định vị. (The CSS Grid Layout Module offers a grid-based layout system, with rows and columns, making it easier to design web pages without having to use floats and positioning.)
Nhược điểm: Không hoạt động trong IE cũng như trong Edge 15 trở về trước. (Disadvantages: Does not work in IE nor in Edge 15 and earlier.)
Tìm hiểu thêm về lưới CSS trong chương CSS Grid View của chúng tôi. (Learn more about CSS grids in our CSS Grid View chapter.)

